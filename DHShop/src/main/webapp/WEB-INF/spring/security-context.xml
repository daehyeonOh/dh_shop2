<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:security="http://www.springframework.org/schema/security"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
							http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="com.devdh.shop.user.persistence" />

	<!-- url패턴과 스프링 시큐리티를 무시-->
	<security:http pattern="/resources/**" security="none" />

	<!-- [권한]
		hasRole('role1') 권한(role1)을 가지고 있는 경우
		hasAnyRole('role1', 'role2') 권한들(role1, role2) 하나라도 가지고 있을 경우(갯수 제한x)
		permitAll 권한에 상관없이 모두 접근 가능
		denyAll 모두 접근 불가
		isAnonymous() Anonymous 사용자일 경우(인증을 하지 않은 사용자)
		isRememberMe() Remember-me 기능으로 로그인한 사용자일 경우
		isAuthenticated() Anonymous 사용자가 아닐 경우(인증을 한 사용자)
		isFullyAuthenticated() Anonymous 사용자가 아니고 Remember-me 기능으로 로그인 하지 않은 사용자 일 경우
	 -->
	
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/member/**" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/**" access="permitAll" />
		
		<security:form-login
			login-page="/signIn"
			authentication-failure-handler-ref="loginFailureHandler"
			authentication-success-handler-ref="loginSuccessHandler"
		/>
		
		<security:logout
	        logout-url="/logout"
	        delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"
	        logout-success-url="/"
	    />

		<security:access-denied-handler
    		ref="accessDeniedHandler"
		/>
		
	</security:http>
	
	<security:authentication-manager>
	    <security:authentication-provider user-service-ref="userService">
	    	<security:password-encoder ref="bcryptPasswordEncoder"/>
	    </security:authentication-provider>
	</security:authentication-manager>
	
	<bean id="userService" class="com.devdh.shop.user.service.UserServiceImpl" />
	
	<bean id="loginFailureHandler" class="com.devdh.shop.user.handler.LoginFailureHandler">
		<property name="usernamename" value="username" />
		<property name="passwordname" value="password" />
		<property name="errormsgname" value="errormsg" />
		<property name="defaultFailureUrl" value="/signIn?error" />
		<property name="redirectUrl" value="loginRedirect" />
	</bean>
	
	<bean id="loginSuccessHandler" class="com.devdh.shop.user.handler.LoginSuccessHandler">
	    <property name="usernamename" value="username"/>
	    <property name="defaultUrl" value="/"/>
	    <property name="redirectUrl" value="loginRedirect"></property>
	</bean>
	
	<bean id="accessDeniedHandler" class="com.devdh.shop.user.handler.LoginAccessDeniedHandler">
		<property name="errorpage" value="/access_denied_page"/>
		<property name="usernamename" value="username"/>
		<property name="authorizename" value="authorize"/>
		<property name="errorcodename" value="errorcode"/>
		<property name="errormsgname" value="errormsg"/>
	</bean>

	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
</beans>
